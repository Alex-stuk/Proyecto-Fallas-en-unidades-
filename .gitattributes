import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.mindrot.jbcrypt.BCrypt;

public class UserManager {

    private static final String URL = "jdbc:sqlite:user_database.db";

    public static void main(String[] args) {
        createTable();
        createUser("usuario1", "contrase침a123");
        verifyUser("usuario1", "contrase침a123");
    }

    public static void createTable() {
        String sql = "CREATE TABLE IF NOT EXISTS users (\n"
                + " id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
                + " username TEXT NOT NULL UNIQUE,\n"
                + " password TEXT NOT NULL\n"
                + ");";

        try (Connection conn = DriverManager.getConnection(URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.execute();
            System.out.println("Tabla de usuarios creada o ya existe.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void createUser(String username, String password) {
        String hashedPassword = BCrypt.hashpw(password, BCrypt.gensalt());
        String sql = "INSERT INTO users(username, password) VALUES(?, ?)";

        try (Connection conn = DriverManager.getConnection(URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, username);
            pstmt.setString(2, hashedPassword);
            pstmt.executeUpdate();
            System.out.println("Usuario " + username + " creado exitosamente.");
        } catch (SQLException e) {
            System.out.println("El nombre de usuario ya existe o se produjo un error: " + e.getMessage());
        }
    }

    public static void verifyUser(String username, String password) {
        String sql = "SELECT password FROM users WHERE username = ?";

        try (Connection conn = DriverManager.getConnection(URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, username);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                String hashedPassword = rs.getString("password");
                if (BCrypt.checkpw(password, hashedPassword)) {
                    System.out.println("Inicio de sesi칩n exitoso.");
                } else {
                    System.out.println("Contrase침a incorrecta.");
                }
            } else {
                System.out.println("Usuario no encontrado.");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
}

